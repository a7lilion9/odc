// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Service {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  label     String

  users  User[]
  errors Error[]
}

model Error {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  label     String
  serviceId String

  operations Operation[]

  service Service @relation(fields: [serviceId], references: [id])
}

model Type {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  label     String

  articles Article[]
}

model Article {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  label     String
  typeId    String

  items Item[]

  type Type @relation(fields: [typeId], references: [id])
}

model User {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  username  String   @unique
  password  String
  fullName  String
  role      String
  serviceId String

  items      Item[]
  operations Operation[]

  service Service @relation(fields: [serviceId], references: [id])
}

model Item {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  code      String
  oldCode   String?
  ownerId   String?
  articleId String

  operations Operation[]

  article Article @relation(fields: [articleId], references: [id])
  user    User?   @relation(fields: [ownerId], references: [id])
}

model Operation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  itemId    String
  userId    String
  errorId   String

  item  Item  @relation(fields: [itemId], references: [id])
  user  User  @relation(fields: [userId], references: [id])
  error Error @relation(fields: [errorId], references: [id])
}
