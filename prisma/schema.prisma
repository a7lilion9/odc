generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Service {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  label     String
  users     User[]
}

model ErrorType {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  label     String
}

model Type {
  id        String    @id @default(uuid())
  createdAt DateTime  @default(now())
  label     String
  articles  Article[]
}

model Article {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  label     String
  typeId    String
  type      Type     @relation(fields: [typeId], references: [id])
  items     Item[]
}

model User {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  username   String      @unique
  password   String
  fullName   String
  role       String
  serviceId  String
  items      Item[]
  operations Operation[]
  service    Service     @relation(fields: [serviceId], references: [id])
}

model Item {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  code       String      @unique
  oldCode    String?
  ownerId    String?
  articleId  String
  user       User?       @relation(fields: [ownerId], references: [id])
  article    Article     @relation(fields: [articleId], references: [id])
  operations Operation[]
}

model Operation {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  itemId     String
  userId     String
  matricule  String
  managerId  String
  shift      String?
  ncoulee    String?
  bcoulageId String?
  error      String?
  bcoulage   bCoulage? @relation(fields: [bcoulageId], references: [id])
  manager    Manager   @relation(fields: [managerId], references: [id])
  operator   Operator  @relation(fields: [matricule], references: [matricule])
  user       User      @relation(fields: [userId], references: [id])
  item       Item      @relation(fields: [itemId], references: [id], onDelete: Cascade)
}

model Operator {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  matricule  String      @unique
  label      String?
  operations Operation[]
}

model Manager {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  label      String      @unique
  operations Operation[]
}

model bCoulage {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  label      String
  operations Operation[]
}
